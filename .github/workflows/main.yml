name: donor-go-backend

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  deploy:
    name: Setup Gcloud Account
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: docker.io/${{ secrets.DOCKER_USERNAME }}/${{ github.repository }}:${{ github.sha }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PASS: ${{ secrets.DB_PASS }}
      REFRESH_TOKEN_SECRET_KEY: ${{ secrets.REFRESH_TOKEN_SECRET_KEY }}
      ACCESS_TOKEN_SECRET_KEY: ${{ secrets.ACCESS_TOKEN_SECRET_KEY }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: |
          echo "Logging in to Docker Hub..."
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin || exit 1
        continue-on-error: false
        
      - name: Build Docker Image
        run: |
          echo "Building Docker Image..."
          docker build -t $IMAGE_NAME . || exit 1

      - name: Push Docker Image to Docker Hub
        run: |
          echo "Pushing Docker Image to Docker Hub..."
          docker push $IMAGE_NAME || exit 1

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
          
      - name: Deploy Docker Image to Google Cloud Run
        run: |
            gcloud run deploy ${{ secrets.APPLICATION }} \
              --image $IMAGE_NAME \
              --region asia-southeast2 \
              --platform managed \
              --allow-unauthenticated \
              --port 8080 \
              --set-env-vars="DB_NAME=${{ secrets.DB_NAME }}, DB_USERNAME=${{ secrets.DB_USERNAME }}, DB_PASS=${{ secrets.DB_PASS }}, DB_HOST=${{ secrets.DB_HOST }}, REFRESH_TOKEN_SECRET_KEY=${{ secrets.REFRESH_TOKEN_SECRET_KEY }}, ACCESS_TOKEN_SECRET_KEY=${{ secrets.ACCESS_TOKEN_SECRET_KEY }}, MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}, MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }},"

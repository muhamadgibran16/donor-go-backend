name: donor-go-backend

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GCP_REGISTRY: asia-southeast2-docker.pkg.dev
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_APP_NAME: ${{ secrets.APPLICATION }}

jobs:
  build-and-push:
    name: Build and Push to GHCR
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Verify image push
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    name: Deploy to Cloud Run
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PASS: ${{ secrets.DB_PASS }}
      DB_PORT: ${{ secrets.DB_PORT }}
      REFRESH_TOKEN_SECRET_KEY: ${{ secrets.REFRESH_TOKEN_SECRET_KEY }}
      ACCESS_TOKEN_SECRET_KEY: ${{ secrets.ACCESS_TOKEN_SECRET_KEY }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME}}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD}}

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker ${{ env.GCP_REGISTRY }} --quiet

      - name: Pull image from GHCR
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Tag and push image to GCP
        run: |
          docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_APP_NAME }}:${{ github.sha }}
          docker push ${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_APP_NAME }}:${{ github.sha }}

      - name: Deploy Docker Image to Google Cloud Run
        run: |
          gcloud run deploy ${{ secrets.APPLICATION }} \
            --image ${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_APP_NAME }}:${{ github.sha }} \
            --region asia-southeast2 \
            --platform managed \
            --allow-unauthenticated \
            --port 8080
        env:
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PASS: ${{ secrets.DB_PASS }}
          REFRESH_TOKEN_SECRET_KEY: ${{ secrets.REFRESH_TOKEN_SECRET_KEY }}
          ACCESS_TOKEN_SECRET_KEY: ${{ secrets.ACCESS_TOKEN_SECRET_KEY }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME}}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD}}